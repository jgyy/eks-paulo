AWSTemplateFormatVersion: 2010-09-09
Description: 'EKS Managed Nodes (SSH access: true) [created by eksctl]'
Mappings:
  ServicePrincipalPartitionMap:
    aws:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-cn:
      EC2: ec2.amazonaws.com.cn
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-us-gov:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
Resources:
  LaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              Iops: 3000
              Throughput: 125
              VolumeSize: 80
              VolumeType: gp3
        KeyName: >-
          eksctl-cluster-7-nodegroup-ng-1-ee:06:74:eb:58:9e:29:ae:c0:fd:1f:9b:1f:50:3d:b8
        MetadataOptions:
          HttpPutResponseHopLimit: 2
          HttpTokens: optional
        SecurityGroupIds:
          - !ImportValue 'eksctl-cluster-7-cluster::ClusterSecurityGroupId'
          - !Ref SSH
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: cluster-7-ng-1-Node
              - Key: alpha.eksctl.io/nodegroup-name
                Value: ng-1
              - Key: alpha.eksctl.io/nodegroup-type
                Value: managed
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: cluster-7-ng-1-Node
              - Key: alpha.eksctl.io/nodegroup-name
                Value: ng-1
              - Key: alpha.eksctl.io/nodegroup-type
                Value: managed
          - ResourceType: network-interface
            Tags:
              - Key: Name
                Value: cluster-7-ng-1-Node
              - Key: alpha.eksctl.io/nodegroup-name
                Value: ng-1
              - Key: alpha.eksctl.io/nodegroup-type
                Value: managed
      LaunchTemplateName: !Sub '${AWS::StackName}'
  ManagedNodeGroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      AmiType: AL2_x86_64
      ClusterName: cluster-7
      InstanceTypes:
        - m5.large
      Labels:
        alpha.eksctl.io/cluster-name: cluster-7
        alpha.eksctl.io/nodegroup-name: ng-1
      LaunchTemplate:
        Id: !Ref LaunchTemplate
      NodeRole: !GetAtt 
        - NodeInstanceRole
        - Arn
      NodegroupName: ng-1
      ScalingConfig:
        DesiredSize: 1
        MaxSize: 1
        MinSize: 1
      Subnets: !Split 
        - ','
        - !ImportValue 'eksctl-cluster-7-cluster::SubnetsPublic'
      Tags:
        alpha.eksctl.io/nodegroup-name: ng-1
        alpha.eksctl.io/nodegroup-type: managed
  NodeInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - !FindInMap 
                  - ServicePrincipalPartitionMap
                  - !Ref 'AWS::Partition'
                  - EC2
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub >-
          arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Path: /
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}/NodeInstanceRole'
  SSH:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow SSH access
      GroupName: !Sub '${AWS::StackName}-remoteAccess'
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow SSH access to managed worker nodes in group ng-1
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIpv6: '::/0'
          Description: Allow SSH access to managed worker nodes in group ng-1
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}/SSH'
      VpcId: !ImportValue 'eksctl-cluster-7-cluster::VPC'
