AWSTemplateFormatVersion: 2010-09-09
Description: >-
  EKS nodes (AMI family: AmazonLinux2, SSH access: false, private networking:
  false) [created and managed by eksctl]
Mappings:
  ServicePrincipalPartitionMap:
    aws:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-cn:
      EC2: ec2.amazonaws.com.cn
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-us-gov:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
Resources:
  EgressInterCluster:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      Description: >-
        Allow control plane to communicate with worker nodes in group ng-6
        (kubelet and workload TCP ports)
      DestinationSecurityGroupId: !Ref SG
      FromPort: 1025
      GroupId: !ImportValue 'eksctl-cluster-7-cluster::SecurityGroup'
      IpProtocol: tcp
      ToPort: 65535
  EgressInterClusterAPI:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      Description: >-
        Allow control plane to communicate with worker nodes in group ng-6
        (workloads using HTTPS port, commonly used with extension API servers)
      DestinationSecurityGroupId: !Ref SG
      FromPort: 443
      GroupId: !ImportValue 'eksctl-cluster-7-cluster::SecurityGroup'
      IpProtocol: tcp
      ToPort: 443
  IngressInterClusterCP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: >-
        Allow control plane to receive API requests from worker nodes in group
        ng-6
      FromPort: 443
      GroupId: !ImportValue 'eksctl-cluster-7-cluster::SecurityGroup'
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref SG
      ToPort: 443
  NodeGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      DesiredCapacity: '1'
      LaunchTemplate:
        LaunchTemplateName: !Sub '${AWS::StackName}'
        Version: !GetAtt 
          - NodeGroupLaunchTemplate
          - LatestVersionNumber
      MaxSize: '1'
      MinSize: '1'
      Tags:
        - Key: Name
          PropagateAtLaunch: 'true'
          Value: cluster-7-ng-6-Node
        - Key: kubernetes.io/cluster/cluster-7
          PropagateAtLaunch: 'true'
          Value: owned
      VPCZoneIdentifier: !Split 
        - ','
        - !ImportValue 'eksctl-cluster-7-cluster::SubnetsPublic'
    UpdatePolicy:
      AutoScalingRollingUpdate: {}
  NodeGroupLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              Encrypted: false
              Iops: 3000
              Throughput: 125
              VolumeSize: 80
              VolumeType: gp3
        IamInstanceProfile:
          Arn: !GetAtt 
            - NodeInstanceProfile
            - Arn
        ImageId: ami-06c6b04b283f6a360
        InstanceType: m5.large
        MetadataOptions:
          HttpPutResponseHopLimit: 2
          HttpTokens: optional
        NetworkInterfaces:
          - DeviceIndex: 0
            Groups:
              - !ImportValue 'eksctl-cluster-7-cluster::SharedNodeSecurityGroup'
              - !Ref SG
            NetworkCardIndex: 0
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: cluster-7-ng-6-Node
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: cluster-7-ng-6-Node
          - ResourceType: network-interface
            Tags:
              - Key: Name
                Value: cluster-7-ng-6-Node
        UserData: >-
          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
      LaunchTemplateName: !Sub '${AWS::StackName}'
  NodeInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref NodeInstanceRole
  NodeInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - !FindInMap 
                  - ServicePrincipalPartitionMap
                  - !Ref 'AWS::Partition'
                  - EC2
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub >-
          arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Path: /
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}/NodeInstanceRole'
  SG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Communication between the control plane and worker nodes in group ng-6
      SecurityGroupIngress:
        - Description: >-
            [IngressInterCluster] Allow worker nodes in group ng-6 to
            communicate with control plane (kubelet and workload TCP ports)
          FromPort: 1025
          IpProtocol: tcp
          SourceSecurityGroupId: !ImportValue 'eksctl-cluster-7-cluster::SecurityGroup'
          ToPort: 65535
        - Description: >-
            [IngressInterClusterAPI] Allow worker nodes in group ng-6 to
            communicate with control plane (workloads using HTTPS port, commonly
            used with extension API servers)
          FromPort: 443
          IpProtocol: tcp
          SourceSecurityGroupId: !ImportValue 'eksctl-cluster-7-cluster::SecurityGroup'
          ToPort: 443
      Tags:
        - Key: kubernetes.io/cluster/cluster-7
          Value: owned
        - Key: Name
          Value: !Sub '${AWS::StackName}/SG'
      VpcId: !ImportValue 'eksctl-cluster-7-cluster::VPC'
Outputs:
  FeatureLocalSecurityGroup:
    Value: true
  FeaturePrivateNetworking:
    Value: false
  FeatureSharedSecurityGroup:
    Value: true
  InstanceProfileARN:
    Value: !GetAtt 
      - NodeInstanceProfile
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}::InstanceProfileARN'
  InstanceRoleARN:
    Value: !GetAtt 
      - NodeInstanceRole
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}::InstanceRoleARN'
