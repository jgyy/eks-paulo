AWSTemplateFormatVersion: 2010-09-09
Description: >-
  EKS nodes (AMI family: AmazonLinux2, SSH access: false, private networking:
  false) [created and managed by eksctl]
Mappings:
  ServicePrincipalPartitionMap:
    aws:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-cn:
      EC2: ec2.amazonaws.com.cn
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-us-gov:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
Resources:
  EgressInterCluster:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      Description: >-
        Allow control plane to communicate with worker nodes in group ng-1
        (kubelet and workload TCP ports)
      DestinationSecurityGroupId: !Ref SG
      FromPort: 1025
      GroupId: !ImportValue 'eksctl-cluster-1-cluster::SecurityGroup'
      IpProtocol: tcp
      ToPort: 65535
  EgressInterClusterAPI:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      Description: >-
        Allow control plane to communicate with worker nodes in group ng-1
        (workloads using HTTPS port, commonly used with extension API servers)
      DestinationSecurityGroupId: !Ref SG
      FromPort: 443
      GroupId: !ImportValue 'eksctl-cluster-1-cluster::SecurityGroup'
      IpProtocol: tcp
      ToPort: 443
  IngressInterClusterCP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: >-
        Allow control plane to receive API requests from worker nodes in group
        ng-1
      FromPort: 443
      GroupId: !ImportValue 'eksctl-cluster-1-cluster::SecurityGroup'
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref SG
      ToPort: 443
  NodeGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      DesiredCapacity: '1'
      LaunchTemplate:
        LaunchTemplateName: !Sub '${AWS::StackName}'
        Version: !GetAtt 
          - NodeGroupLaunchTemplate
          - LatestVersionNumber
      MaxSize: '1'
      MinSize: '1'
      Tags:
        - Key: Name
          PropagateAtLaunch: 'true'
          Value: cluster-1-ng-1-Node
        - Key: kubernetes.io/cluster/cluster-1
          PropagateAtLaunch: 'true'
          Value: owned
      VPCZoneIdentifier: !Split 
        - ','
        - !ImportValue 'eksctl-cluster-1-cluster::SubnetsPublic'
    UpdatePolicy:
      AutoScalingRollingUpdate: {}
  NodeGroupLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              Encrypted: false
              Iops: 3000
              Throughput: 125
              VolumeSize: 80
              VolumeType: gp3
        IamInstanceProfile:
          Arn: !GetAtt 
            - NodeInstanceProfile
            - Arn
        ImageId: ami-0f21990ba63a87ab0
        InstanceType: m5.large
        MetadataOptions:
          HttpPutResponseHopLimit: 2
          HttpTokens: optional
        NetworkInterfaces:
          - DeviceIndex: 0
            Groups:
              - !ImportValue 'eksctl-cluster-1-cluster::SharedNodeSecurityGroup'
              - !Ref SG
            NetworkCardIndex: 0
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: cluster-1-ng-1-Node
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: cluster-1-ng-1-Node
          - ResourceType: network-interface
            Tags:
              - Key: Name
                Value: cluster-1-ng-1-Node
        UserData: >-
          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
      LaunchTemplateName: !Sub '${AWS::StackName}'
  NodeInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref NodeInstanceRole
  NodeInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - !FindInMap 
                  - ServicePrincipalPartitionMap
                  - !Ref 'AWS::Partition'
                  - EC2
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub >-
          arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Path: /
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}/NodeInstanceRole'
  SG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Communication between the control plane and worker nodes in group ng-1
      SecurityGroupIngress:
        - Description: >-
            [IngressInterCluster] Allow worker nodes in group ng-1 to
            communicate with control plane (kubelet and workload TCP ports)
          FromPort: 1025
          IpProtocol: tcp
          SourceSecurityGroupId: !ImportValue 'eksctl-cluster-1-cluster::SecurityGroup'
          ToPort: 65535
        - Description: >-
            [IngressInterClusterAPI] Allow worker nodes in group ng-1 to
            communicate with control plane (workloads using HTTPS port, commonly
            used with extension API servers)
          FromPort: 443
          IpProtocol: tcp
          SourceSecurityGroupId: !ImportValue 'eksctl-cluster-1-cluster::SecurityGroup'
          ToPort: 443
      Tags:
        - Key: kubernetes.io/cluster/cluster-1
          Value: owned
        - Key: Name
          Value: !Sub '${AWS::StackName}/SG'
      VpcId: !ImportValue 'eksctl-cluster-1-cluster::VPC'
Outputs:
  FeatureLocalSecurityGroup:
    Value: true
  FeaturePrivateNetworking:
    Value: false
  FeatureSharedSecurityGroup:
    Value: true
  InstanceProfileARN:
    Value: !GetAtt 
      - NodeInstanceProfile
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}::InstanceProfileARN'
  InstanceRoleARN:
    Value: !GetAtt 
      - NodeInstanceRole
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}::InstanceRoleARN'
