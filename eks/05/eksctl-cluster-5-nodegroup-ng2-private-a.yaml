AWSTemplateFormatVersion: 2010-09-09
Description: 'EKS Managed Nodes (SSH access: false) [created by eksctl]'
Mappings:
  ServicePrincipalPartitionMap:
    aws:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-cn:
      EC2: ec2.amazonaws.com.cn
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-us-gov:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
Resources:
  LaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              Iops: 3000
              Throughput: 125
              VolumeSize: 80
              VolumeType: gp3
        MetadataOptions:
          HttpPutResponseHopLimit: 2
          HttpTokens: optional
        SecurityGroupIds:
          - !ImportValue 'eksctl-cluster-5-cluster::ClusterSecurityGroupId'
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: cluster-5-ng2-private-a-Node
              - Key: alpha.eksctl.io/nodegroup-name
                Value: ng2-private-a
              - Key: alpha.eksctl.io/nodegroup-type
                Value: managed
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: cluster-5-ng2-private-a-Node
              - Key: alpha.eksctl.io/nodegroup-name
                Value: ng2-private-a
              - Key: alpha.eksctl.io/nodegroup-type
                Value: managed
          - ResourceType: network-interface
            Tags:
              - Key: Name
                Value: cluster-5-ng2-private-a-Node
              - Key: alpha.eksctl.io/nodegroup-name
                Value: ng2-private-a
              - Key: alpha.eksctl.io/nodegroup-type
                Value: managed
        UserData: >-
          TUlNRS1WZXJzaW9uOiAxLjANCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L21peGVkOyBib3VuZGFyeT1hMWE1OGE3ODI3NGE5N2I5OTI5YjdkYzFmNzk5MTE5MzI2YzNlMmQ1YjQwYmNmMDllNTUxYmEwN2JiYWUNCg0KLS1hMWE1OGE3ODI3NGE5N2I5OTI5YjdkYzFmNzk5MTE5MzI2YzNlMmQ1YjQwYmNmMDllNTUxYmEwN2JiYWUNCkNvbnRlbnQtVHlwZTogdGV4dC94LXNoZWxsc2NyaXB0DQpDb250ZW50LVR5cGU6IGNoYXJzZXQ9InVzLWFzY2lpIg0KDQpzZWQgJzJpICJpbnNlY3VyZS1yZWdpc3RyaWVzIjogWyIxNzIuMjAuMC4wLzE2IiwiMTAuMTAwLjAuMC8xNiJdLCcgIC9ldGMvZG9ja2VyL2RhZW1vbi5qc29uDQotLWExYTU4YTc4Mjc0YTk3Yjk5MjliN2RjMWY3OTkxMTkzMjZjM2UyZDViNDBiY2YwOWU1NTFiYTA3YmJhZQ0KQ29udGVudC1UeXBlOiB0ZXh0L3gtc2hlbGxzY3JpcHQNCkNvbnRlbnQtVHlwZTogY2hhcnNldD0idXMtYXNjaWkiDQoNCnN5c3RlbWN0bCByZXN0YXJ0IGRvY2tlcg0KLS1hMWE1OGE3ODI3NGE5N2I5OTI5YjdkYzFmNzk5MTE5MzI2YzNlMmQ1YjQwYmNmMDllNTUxYmEwN2JiYWUtLQ0K
      LaunchTemplateName: !Sub '${AWS::StackName}'
  ManagedNodeGroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      AmiType: AL2_x86_64
      ClusterName: cluster-5
      InstanceTypes:
        - m5.large
      Labels:
        alpha.eksctl.io/cluster-name: cluster-5
        alpha.eksctl.io/nodegroup-name: ng2-private-a
        nodegroup-type: backend-cluster-addons
      LaunchTemplate:
        Id: !Ref LaunchTemplate
      NodeRole: !GetAtt 
        - NodeInstanceRole
        - Arn
      NodegroupName: ng2-private-a
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 2
        MinSize: 2
      Subnets: !Split 
        - ','
        - !ImportValue 'eksctl-cluster-5-cluster::SubnetsPrivate'
      Tags:
        alpha.eksctl.io/nodegroup-name: ng2-private-a
        alpha.eksctl.io/nodegroup-type: managed
  NodeInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - !FindInMap 
                  - ServicePrincipalPartitionMap
                  - !Ref 'AWS::Partition'
                  - EC2
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub >-
          arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Path: /
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}/NodeInstanceRole'
